<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="com.data.EngineFactory"/>
    <fullyQualifiedTypeName name="com.data.Engine"/>
    <fullyQualifiedTypeName name="com.data.PetrolEngineee"/>
    <fullyQualifiedTypeName name="com.data.ElectricEngineeee"/>
    <fullyQualifiedTypeName name="com.data.Engineee"/>
    <fullyQualifiedTypeName name="com.factoryPaattern.EngineFactory"/>
    <fullyQualifiedTypeName name="com.data.FactoryOfEngine"/>
    <fullyQualifiedTypeName name="com.data.Cars"/>
    <fullyQualifiedTypeName name="java.util.Collections"/>
    <fullyQualifiedTypeName name="com.data.Names"/>
    <fullyQualifiedTypeName name="com.data.OddEvenPrinter"/>
    <fullyQualifiedTypeName name="java.text.BreakIterator"/>
    <fullyQualifiedTypeName name="java.lang.Thread"/>
    <fullyQualifiedTypeName name="javax.annotation.processing.SupportedSourceVersion"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="com.revision.InvetBinaryTreeDay50"/>
    <fullyQualifiedTypeName name="com.revision.InvertBinaryTreeDay50.TreeNode"/>
    <fullyQualifiedTypeName name="com.revision.TreeNode"/>
    <fullyQualifiedTypeName name="com.revision.CreateBstDay50.TreeNode"/>
    <fullyQualifiedTypeName name="java.util.Arrays"/>
    <fullyQualifiedTypeName name="java.util.HashSet"/>
    <fullyQualifiedTypeName name="java.lang.String"/>
    <fullyQualifiedTypeName name="com.revision.SimpleOrComplexGraph.Edge"/>
    <fullyQualifiedTypeName name="java.util.ArrayDeque"/>
    <fullyQualifiedTypeName name="java.awt.geom.Ellipse2D"/>
    <fullyQualifiedTypeName name="boolean"/>
    <fullyQualifiedTypeName name="java.util.function.Function"/>
    <fullyQualifiedTypeName name="java.lang.Exception"/>
    <fullyQualifiedTypeName name="java.lang.RuntimeException"/>
    <fullyQualifiedTypeName name="com.java8.RunnableException"/>
    <fullyQualifiedTypeName name="com.java8.EmployeeData"/>
    <fullyQualifiedTypeName name="java.lang.Comparable"/>
    <fullyQualifiedTypeName name="java.util.stream.Collectors"/>
    <fullyQualifiedTypeName name="java.util.Comparator"/>
    <fullyQualifiedTypeName name="com.java8.EmpData"/>
    <fullyQualifiedTypeName name="java.lang.System"/>
    <fullyQualifiedTypeName name="java.lang.Package"/>
    <fullyQualifiedTypeName name="java.util.Map"/>
    <fullyQualifiedTypeName name="java.util.HashMap"/>
    <fullyQualifiedTypeName name="java.util.Map.Entry"/>
    <fullyQualifiedTypeName name="java.lang.ArithmeticException"/>
    <fullyQualifiedTypeName name="java.lang.StackOverflowError"/>
    <fullyQualifiedTypeName name="java.lang.Character"/>
    <fullyQualifiedTypeName name="java.util.Stack"/>
    <fullyQualifiedTypeName name="java.lang.Math"/>
    <fullyQualifiedTypeName name="com.revision.StackUsingArrayList.Stack"/>
    <fullyQualifiedTypeName name="com.revision.StackUsingLinkedListDay64.Node"/>
    <fullyQualifiedTypeName name="com.revision.Static"/>
    <fullyQualifiedTypeName name="com.revision.StackUsingLinkedListDay64.Stack"/>
    <fullyQualifiedTypeName name="javax.swing.text.html.HTMLDocument.HTMLReader.IsindexAction"/>
    <fullyQualifiedTypeName name="java.util.ArrayList"/>
    <fullyQualifiedTypeName name="com.revision.StackUsingDynamicListDay64.DynamicStack"/>
    <fullyQualifiedTypeName name="com.revision.StackUsingDoublyLinkedListDay64.Node"/>
    <fullyQualifiedTypeName name="java.util.EmptyStackException"/>
    <fullyQualifiedTypeName name="com.revision.StackUsingDoublyLinkedListDay64.StackDL"/>
    <fullyQualifiedTypeName name="com.revision.StackUsingDoublyLinkedListDay64"/>
    <fullyQualifiedTypeName name="java.util.LinkedList"/>
    <fullyQualifiedTypeName name="java.util.Queue"/>
    <fullyQualifiedTypeName name="java.lang.Integer"/>
    <fullyQualifiedTypeName name="com.revision.StachUsingQueueDay64.StackQueue"/>
</qualifiedTypeNameHistroy>
